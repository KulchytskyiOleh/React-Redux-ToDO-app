{"version":3,"sources":["redux/reducer.js","redux/actionTypes.js","redux/store.js","components/AddTodoForm/AddTodo.jsx","components/TodoItem/TodoItem.jsx","components/TodoItemList/TodoItemList.jsx","App.js","redux/actions.js","index.js"],"names":["initialState","todos","id","text","completed","filteredTodos","reducer","state","action","type","newTodo","Date","now","map","item","filter","store","createStore","devToolsEnhancer","AddTodo","addTodo","useState","setText","className","onSubmit","e","preventDefault","value","onChange","target","TodoItem","deleteTodo","handleChange","checked","onClick","TodoItemList","key","title","connect","dispatch","props","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea94c63f.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nconst initialState = {\r\n  todos: [\r\n    { id: 1, text: \"Go to shop\", completed: false },\r\n    { id: 2, text: \"Buy apples\", completed: true },\r\n    { id: 3, text: \"Read some book\", completed: false },\r\n    { id: 4, text: \"Ride on bike\", completed: true },\r\n  ],\r\n  filteredTodos: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // case actionsTypes.GET_TODOS: {\r\n    //   return { ...state, payload };\r\n    // }\r\n    // case actionsTypes.FETCH_TODOS: {\r\n    //   return { ...state, payload };\r\n    // }\r\n    // case actionsTypes.FETCH_TODO: {\r\n    //   return { ...state, payload };\r\n    // }\r\n    case actionTypes.ADD_TODO: {\r\n      let newTodo = { id: Date.now(), text: action.text, completed: false };\r\n      return { ...state, todos: [...state.todos, newTodo] };\r\n    }\r\n    case actionTypes.HANDLE_CHANGE: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.map((item) =>\r\n            item.id === action.id\r\n              ? { ...item, completed: !item.completed }\r\n              : item\r\n          ),\r\n        ],\r\n      };\r\n    }\r\n    case actionTypes.DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((item) => item.id !== action.id),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","export const GET_TODOS = \"GET_TODOS\";\r\nexport const FETCH_TODOS = \"FETCH_TODOS\";\r\nexport const FETCH_TODO = \"FETCH_TODO\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"../redux/reducer\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n// const store = createStore(reducer,composeEnhancers());\r\nconst store = createStore(reducer, devToolsEnhancer());\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddTodo.css\";\r\nconst AddTodo = ({ addTodo }) => {\r\n  const [text, setText] = useState(\"\");\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTodo(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"addTodoForm\" onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        className=\"addTodoInput\"\r\n      />\r\n      <input className=\"addTodoSubmit\" type=\"submit\" value=\"+\" />\r\n    </form>\r\n  );\r\n};\r\nexport default AddTodo;\r\n","import React /* useState */ from \"react\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport \"./TodoItem.css\";\r\n\r\nfunction TodoItem({ item, deleteTodo, handleChange }) {\r\n  return (\r\n    <>\r\n      <div className={item.completed ? \"todoItem completed\" : \"todoItem\"}>\r\n        <input\r\n          className=\"todoItemCheckbox\"\r\n          type=\"checkbox\"\r\n          checked={item.completed}\r\n          onChange={() => handleChange(item.id)}\r\n        />\r\n        <p\r\n          className={item.completed ? \"todoItemText completed\" : \"todoItemText\"}\r\n          onClick={() => handleChange(item.id)}\r\n        >\r\n          {item.text}\r\n        </p>\r\n        <span className=\"todoItemDelete\">\r\n          <FaWindowClose onClick={() => deleteTodo(item.id)} />\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./TodoItemList.css\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\n\r\nfunction TodoItemList({ todos, deleteTodo, handleChange }) {\r\n  return (\r\n    <div className=\"todoItemList\">\r\n      {todos.map((item) => (\r\n        <TodoItem\r\n          key={item.id}\r\n          item={item}\r\n          title={item.text}\r\n          completed={item.completed}\r\n          deleteTodo={deleteTodo}\r\n          handleChange={handleChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React, { /* useState,  useEffect*/ } from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { addTodo, deleteTodo, handleChange } from \"./redux/actions\";\nimport AddTodo from \"./components/AddTodoForm/AddTodo\";\nimport TodoItemList from \"./components/TodoItemList/TodoItemList\";\nfunction App(props) {\n\n\n  // useEffect(() => {}, []);\n\n  return (\n    <div className=\"App\">\n      <AddTodo todos={props.todos} addTodo={props.addTodo} />\n      <br />\n      <TodoItemList\n        todos={props.todos}\n        addTodo={props.addTodo}\n        deleteTodo={props.deleteTodo}\n        handleChange={props.handleChange}\n      />\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (text) => dispatch(addTodo(text)),\n    deleteTodo: (id) => dispatch(deleteTodo(id)),\n    handleChange: (id) => dispatch(handleChange(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getTodos(payload) {\r\n  return { type: actionTypes.GET_TODOS, payload };\r\n}\r\nexport function fetchTodos(payload) {\r\n  return { type: actionTypes.FETCH_TODOS, payload };\r\n}\r\nexport function fetchTodo(payload) {\r\n  return { type: actionTypes.FETCH_TODO, payload };\r\n}\r\nexport const addTodo = (text) => {\r\n  return { type: actionTypes.ADD_TODO,  text };\r\n};\r\n\r\nexport function handleChange(id) {\r\n  return { type: actionTypes.HANDLE_CHANGE, id };\r\n}\r\nexport function deleteTodo(id) {\r\n  return { type: actionTypes.DELETE_TODO, id };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}