{"version":3,"sources":["redux/reducer.js","redux/actionTypes.js","redux/store.js","redux/actions.js","components/AddTodoForm/AddTodo.jsx","components/TodoItem/TodoItem.jsx","components/TodoItemList/TodoItemList.jsx","App.js","index.js"],"names":["initialState","loading","todos","error","reducer","state","action","type","todo","newTodo","map","item","id","completed","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","fetchTodosRequest","deleteTodo","AddTodo","onAddTodo","useState","text","setText","className","onSubmit","e","preventDefault","value","onChange","target","TodoItem","handleChange","onTodoDelete","checked","onClick","TodoItemList","key","title","connect","dispatch","fetchingTodos","axios","get","then","res","data","fetchTodos","catch","errorMsg","message","fetchTodosFailure","post","category","addTodo","delete","props","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5af2561c.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nconst initialState = {\r\n  loading: false,\r\n  // todos: [\r\n  //   { id: 1, text: \"Go to shop\", completed: false },\r\n  //   { id: 2, text: \"Buy apples\", completed: true },\r\n  //   { id: 3, text: \"Read some book\", completed: false },\r\n  //   { id: 4, text: \"Ride on bike\", completed: true },\r\n  // ],\r\n  todos: [],\r\n  error: \"\",\r\n  // filteredTodos: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_TODOS_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case actionTypes.FETCH_TODOS: {\r\n      return { ...state, loading: false, todos: action.todos };\r\n    }\r\n    case actionTypes.FETCH_TODOS_FAILURE: {\r\n      return { loading: false, todos: [], error: action.error };\r\n    }\r\n    case actionTypes.FETCH_TODO: {\r\n      return { ...state, loading: false, todo: action.todo };\r\n    }\r\n\r\n    case actionTypes.ADD_TODO: {\r\n      // let newTodo = { id: Date.now(), text: action.text, completed: false };\r\n      return { ...state, todos: [...state.todos, action.newTodo] };\r\n    }\r\n    case actionTypes.HANDLE_CHANGE: {\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.map((item) =>\r\n            item.id === action.id\r\n              ? { ...item, completed: !item.completed }\r\n              : item\r\n          ),\r\n        ],\r\n      };\r\n    }\r\n    case actionTypes.DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((item) => item.id !== action.id),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","export const FETCH_TODOS_REQUEST = \"FETCH_TODOS_REQUEST\";\r\nexport const FETCH_TODOS = \"FETCH_TODOS\";\r\nexport const FETCH_TODO = \"FETCH_TODO\";\r\nexport const FETCH_TODOS_FAILURE = \"FETCH_TODOS_FAILURE\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n","import { createStore, applyMiddleware /* compose */ } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../redux/reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const store = createStore(reducer,composeEnhancers());\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport function fetchTodosRequest(loading) {\r\n  return { type: actionTypes.FETCH_TODOS_REQUEST, loading };\r\n}\r\nexport function fetchTodos(todos) {\r\n  return { type: actionTypes.FETCH_TODOS, todos };\r\n}\r\nexport function fetchTodo(id) {\r\n  return { type: actionTypes.FETCH_TODO, id };\r\n}\r\nexport function fetchTodosFailure(error) {\r\n  return { type: actionTypes.FETCH_TODOS_FAILURE, error };\r\n}\r\nexport const addTodo = (newTodo) => {\r\n  return { type: actionTypes.ADD_TODO, newTodo };\r\n};\r\n\r\nexport function handleChange(id) {\r\n  return { type: actionTypes.HANDLE_CHANGE, id };\r\n}\r\nexport function deleteTodo(id) {\r\n  return { type: actionTypes.DELETE_TODO, id };\r\n}\r\n\r\nexport const fetchingTodos = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTodosRequest);\r\n    axios\r\n      .get(`http://localhost:5000/todos/`)\r\n      .then((res) => {\r\n        const todos = res.data;\r\n        dispatch(fetchTodos(todos));\r\n      })\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchTodosFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\nexport const fetchingTodo = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTodosRequest);\r\n    axios.get(`http://localhost:5000/todos/${id}`).then((res) => {\r\n      // const todo = res.data;\r\n      dispatch(fetchTodo(id));\r\n    });\r\n  };\r\n};\r\nexport const onTodoDelete = (id) => {\r\n  return (dispatch) => {\r\n    axios.delete(`http://localhost:5000/todos/${id}`);\r\n    dispatch(deleteTodo(id));\r\n  };\r\n};\r\nexport const onAddTodo = (text) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(`http://localhost:5000/todos/`, {\r\n        id: \"\",\r\n        text,\r\n        completed: false,\r\n        category: \"My todos\",\r\n      })\r\n      .then((res) => {\r\n        const newTodo = res.data;\r\n        dispatch(addTodo(newTodo));\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./AddTodo.css\";\r\nconst AddTodo = ({ onAddTodo }) => {\r\n  const [text, setText] = useState(\"\");\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddTodo(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"addTodoForm\" onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        className=\"addTodoInput\"\r\n      />\r\n      <input className=\"addTodoSubmit\" type=\"submit\" value=\"+\" />\r\n    </form>\r\n  );\r\n};\r\nexport default AddTodo;\r\n","import React /* useState */ from \"react\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport \"./TodoItem.css\";\r\n\r\nfunction TodoItem({ item, deleteTodo, handleChange, onTodoDelete }) {\r\n  return (\r\n    <>\r\n      <div className={item.completed ? \"todoItem completed\" : \"todoItem\"}>\r\n        <input\r\n          className=\"todoItemCheckbox\"\r\n          type=\"checkbox\"\r\n          checked={item.completed}\r\n          onChange={() => handleChange(item.id)}\r\n        />\r\n        <p\r\n          className={item.completed ? \"todoItemText completed\" : \"todoItemText\"}\r\n          onClick={() => handleChange(item.id)}\r\n        >\r\n          {item.text}\r\n        </p>\r\n        <span className=\"todoItemDelete\">\r\n          <FaWindowClose onClick={() => onTodoDelete(item.id)} />\r\n          {/* <FaWindowClose onClick={() => deleteTodo(item.id)} /> */}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./TodoItemList.css\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\n\r\nfunction TodoItemList({ todos, deleteTodo, handleChange, onTodoDelete }) {\r\n  return (\r\n    <div className=\"todoItemList\">\r\n      {todos.map((item) => (\r\n        <TodoItem\r\n          key={item.id}\r\n          item={item}\r\n          title={item.text}\r\n          completed={item.completed}\r\n          deleteTodo={deleteTodo}\r\n          onTodoDelete={onTodoDelete}\r\n          handleChange={handleChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React, { /* useState, */ useEffect } from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./redux/actions\";\nimport AddTodo from \"./components/AddTodoForm/AddTodo\";\nimport TodoItemList from \"./components/TodoItemList/TodoItemList\";\nfunction App(props) {\n  const { fetchingTodos } = props;\n  useEffect(() => {\n    fetchingTodos();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/*      {props.todos.loading ? (\n        <h2>loading</h2>\n      ) : props.todos.error ? (\n        <h2>{props.todos.error}</h2>\n      ) : ( */}\n\n      <AddTodo todos={props.todos} onAddTodo={props.onAddTodo} />\n      <br />\n      <TodoItemList\n        todos={props.todos}\n        addTodo={props.addTodo}\n        deleteTodo={props.deleteTodo}\n        handleChange={props.handleChange}\n        onTodoDelete={props.onTodoDelete}\n      />\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchingTodos: () => dispatch(action.fetchingTodos()),\n    onAddTodo: (text) => dispatch(action.onAddTodo(text)),\n    deleteTodo: (id) => dispatch(action.deleteTodo(id)),\n    handleChange: (id) => dispatch(action.handleChange(id)),\n    onTodoDelete: (id) => dispatch(action.onTodoDelete(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}